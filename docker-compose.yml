version: '3'

services:
###################################
#  set up database container
###################################

  postgresdb:
    restart: always
    image: postgres:10
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=online-exam
      - POSTGRES_PASSWORD=0NLIN3-ex4m


###################################
#  set up test database container
###################################
  testdb:
    build: ./testDB
    depends_on:
      - postgresdb
    command: ./wait-for-postgres.sh postgresdb psql postgresql://postgres:0NLIN3-ex4m@postgresdb/online-exam 

###################################
#  set up backend container
###################################

  server:
    build: ./backend
    ports:
      - "5000:5000"
    expose:
      - 5000
    depends_on:
      - postgresdb
    command: ./wait-for-postgres.sh postgresdb python3 src/main.py
    # volumes:
    #   - ./backend:/app

###################################
#  set up frontend container
###################################

  frontend:
    build: ./frontend
    ports:
      - 4200:4200
    expose:
      - 4200
    depends_on:
      - server
    command: ng serve --host 0.0.0.0 
    # volumes:
    #   - ./frontend:/app

###################################
#  set up nginx container
###################################

  nginx:
    build: ./nginx
    # Map Nginx port 80 to the local machine's port 80
    ports:
      - "80:80"
    # Link the client container so that Nginx will have access to it
    depends_on:
      - frontend
      - server
